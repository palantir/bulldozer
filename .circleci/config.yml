common:
  godel-cache:
    key: &godel-cache-key v1-godel-cache-{{ checksum "godelw" }}-{{ checksum "godel/config/godel.yml" }}
    <<: &restore-godel-cache
      restore_cache:
        keys:
          - *godel-cache-key
    <<: &save-godel-cache
      save_cache:
        key: *godel-cache-key
        paths:
          - ~/.godel

  test-results:
    dir: &results-dir /tmp/test-results
    <<: &store-results
      store_test_results:
        path: *results-dir
    <<: &store-artifacts
      store_artifacts:
        path: *results-dir
        destination: test-results

### Jobs ###

version: 2
jobs:
  build:
    working_directory: /go/src/github.com/palantir/bulldozer
    environment:
      TESTS_DIR: *results-dir
    docker:
      - image: circleci/golang:1.13.4-stretch
    steps:
      - checkout
      - *restore-godel-cache
      - run: ./godelw version
      - *save-godel-cache
      - run: mkdir -p "${TESTS_DIR}"
      - run: ./godelw build
      - run: ./godelw verify --apply=false --junit-output="$TESTS_DIR/$CIRCLE_PROJECT_REPONAME-tests.xml"
      - *store-results
      - *store-artifacts
      - persist_to_workspace:
          root: .
          paths:
            - build/bulldozer

  dist:
    working_directory: /go/src/github.com/palantir/bulldozer
    docker:
      - image: circleci/golang:1.13.4-stretch
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: .
      - *restore-godel-cache
      - run: ./godelw docker build --verbose
      - deploy:
          name: Publish
          command: |
            if [[ "${CIRCLE_BRANCH}" == "develop" ]]; then
              docker login -u "${DOCKERHUB_USERNAME}" -p "${DOCKERHUB_PASSWORD}"
              ./godelw docker push --tags=snapshot
            fi
            if [[ -n "${CIRCLE_TAG}" ]] ; then
              docker login -u "${DOCKERHUB_USERNAME}" -p "${DOCKERHUB_PASSWORD}"
              ./godelw docker push --tags=latest,version
              ./godelw publish bintray \
                  --url https://api.bintray.com \
                  --subject palantir --repository releases --product bulldozer \
                  --username "${BINTRAY_USERNAME}" --password "${BINTRAY_PASSWORD}" \
                  --downloads-list --publish bulldozer
            fi

### Workflows ###

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters: { tags: { only: /.*/ } }
      - dist:
          filters: { tags: { only: /.*/ } }
          requires:
            - build
